services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  auth-service:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    restart: unless-stopped
    env_file:
      - apps/auth/.env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    ports:
      - "4000:4000"
    networks:
      - backend

  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
    restart: unless-stopped
    env_file:
      - apps/gateway/.env
    depends_on:
      - rabbitmq
    ports:
      - "3000:3000"
    networks:
      - backend

  postgres:
    container_name: postgres
    image: postgres:15.2
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    container_name: redis
    image: redis:5.0
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - backend


volumes:
  postgres_data:
  redis_data:

networks:
  backend:
